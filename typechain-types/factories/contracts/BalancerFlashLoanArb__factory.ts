/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  BalancerFlashLoanArb,
  BalancerFlashLoanArbInterface,
} from "../../contracts/BalancerFlashLoanArb";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientProfit",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "profit",
        type: "uint256",
      },
    ],
    name: "FlashLoanExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "PERMIT2_CONTRACT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "emergencyWithdrawMultiple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "swapData",
        type: "bytes",
      },
    ],
    name: "executeFlashLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "feeAmounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "receiveFlashLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161163738038061163783398101604081905261002f916100c4565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610074565b50600180556001600160a01b03166080526100f4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d657600080fd5b81516001600160a01b03811681146100ed57600080fd5b9392505050565b60805161151a61011d600039600081816105d3015281816106540152610a3f015261151a6000f3fe60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610102578063f04f270714610138578063f2fde38b14610158578063f840f3fc1461017857600080fd5b8063128677641461008b57806351cff8d9146100ad578063715018a6146100cd57806376ec49ba146100e257600080fd5b3661008657005b600080fd5b34801561009757600080fd5b506100ab6100a6366004610e8a565b61019b565b005b3480156100b957600080fd5b506100ab6100c8366004610f14565b610245565b3480156100d957600080fd5b506100ab61050f565b3480156100ee57600080fd5b506100ab6100fd3660046110eb565b610523565b34801561010e57600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b34801561014457600080fd5b506100ab610153366004611173565b610649565b34801561016457600080fd5b506100ab610173366004610f14565b610b72565b34801561018457600080fd5b5061011c6e22d473030f116ddee9f6b43ac78ba381565b6101a3610bad565b60005b8181101561024057306351cff8d98484848181106101c6576101c6611220565b90506020020160208101906101db9190610f14565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b15801561021c57600080fd5b505af192505050801561022d575060015b50806102388161124c565b9150506101a6565b505050565b61024d610bad565b6001600160a01b03811661034f57478061029f5760405162461bcd60e51b815260206004820152600e60248201526d4e6f204554482062616c616e636560901b60448201526064015b60405180910390fd5b600080546040516001600160a01b039091169083908381818185875af1925050503d80600081146102ec576040519150601f19603f3d011682016040523d82523d6000602084013e6102f1565b606091505b5050905080610313576040516312171d8360e31b815260040160405180910390fd5b6040518281526000907f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695906020015b60405180910390a2505050565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610398573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bc9190611265565b9050600081116104015760405162461bcd60e51b815260206004820152601060248201526f4e6f20746f6b656e2062616c616e636560801b6044820152606401610296565b816001600160a01b031663a9059cbb6104226000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af115801561046f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610493919061127e565b6104d15760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610296565b826001600160a01b03167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd96958260405161034291815260200190565b50565b610517610bad565b6105216000610bda565b565b61052b610bad565b610533610c2a565b815183511461057c5760405162461bcd60e51b8152602060048201526015602482015274082e4e4c2f240d8cadccee8d040dad2e6dac2e8c6d605b1b6044820152606401610296565b60008351116105bc5760405162461bcd60e51b815260206004820152600c60248201526b456d7074792061727261797360a01b6044820152606401610296565b604051632e1c224f60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635c38449e9061060e9030908790879087906004016112f0565b600060405180830381600087803b15801561062857600080fd5b505af115801561063c573d6000803e3d6000fd5b5050505061024060018055565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610691576040516282b42960e81b815260040160405180910390fd5b6000846000815181106106a6576106a6611220565b602002602001015190506000846000815181106106c5576106c5611220565b602002602001015190506000846000815181106106e4576106e4611220565b60209081029190910101516040516370a0823160e01b81523060048201529091506000906001600160a01b038516906370a0823190602401602060405180830381865afa158015610739573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075d9190611265565b90506000806000808880602001905181019061077991906113e4565b60405163095ea7b360e01b81526001600160a01b038086166004830152602482018d905294985092965090945092509089169063095ea7b3906044016020604051808303816000875af11580156107d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f8919061127e565b6108365760405162461bcd60e51b815260206004820152600f60248201526e105c1c1c9bdd985b0819985a5b1959608a1b6044820152606401610296565b6000846001600160a01b0316846040516108509190611463565b6000604051808303816000865af19150503d806000811461088d576040519150601f19603f3d011682016040523d82523d6000602084013e610892565b606091505b50509050806108b45760405163081ceff360e41b815260040160405180910390fd5b6108be8984610c54565b6000836001600160a01b0316836040516108d89190611463565b6000604051808303816000865af19150503d8060008114610915576040519150601f19603f3d011682016040523d82523d6000602084013e61091a565b606091505b505090508061093c5760405163081ceff360e41b815260040160405180910390fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038c16906370a0823190602401602060405180830381865afa158015610983573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a79190611265565b905060006103e86109ba8c6103e361147f565b6109c4919061149c565b6109ce908a6114be565b9050808210156109f157604051632723fc7560e11b815260040160405180910390fd5b60006109fd8b8d6114be565b9050610a09818b6114be565b8311610a2857604051632723fc7560e11b815260040160405180910390fd5b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390528e169063a9059cbb906044016020604051808303816000875af1158015610a97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abb919061127e565b610af95760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610296565b6000610b05828c6114be565b610b0f90856114d1565b604080518f8152602081018f90529081018290529091506001600160a01b038f16907fe03a36d920ad8de5a978a8f1917280e202ae9193e6dc19e08ef1f6c2a051eba49060600160405180910390a2505050505050505050505050505050505050565b610b7a610bad565b6001600160a01b038116610ba457604051631e4fbdf760e01b815260006004820152602401610296565b61050c81610bda565b6000546001600160a01b031633146105215760405163118cdaa760e01b8152336004820152602401610296565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600260015403610c4d57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6040805160a081018252736b175474e89094c44da98b954eedeac495271d0f815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2602082015273dac17f958d2ee523a2206206994597c13d831ec791810191909152732260fac5e5542a773aa44fbcfedf7c193bc2c599606082015273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48608082015260005b6005811015610e8457836001600160a01b0316828260058110610d0757610d07611220565b60200201516001600160a01b031614610e72576000828260058110610d2e57610d2e611220565b60200201516040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610d7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da19190611265565b90508015610e6f5760405163095ea7b360e01b81526001600160a01b0386811660048301526024820183905283169063095ea7b3906044016020604051808303816000875af1158015610df8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1c919061127e565b610e685760405162461bcd60e51b815260206004820152601c60248201527f496e7465726d65646961746520617070726f76616c206661696c6564000000006044820152606401610296565b5050610e84565b50505b80610e7c8161124c565b915050610ce2565b50505050565b60008060208385031215610e9d57600080fd5b823567ffffffffffffffff80821115610eb557600080fd5b818501915085601f830112610ec957600080fd5b813581811115610ed857600080fd5b8660208260051b8501011115610eed57600080fd5b60209290920196919550909350505050565b6001600160a01b038116811461050c57600080fd5b600060208284031215610f2657600080fd5b8135610f3181610eff565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610f7757610f77610f38565b604052919050565b600067ffffffffffffffff821115610f9957610f99610f38565b5060051b60200190565b600082601f830112610fb457600080fd5b81356020610fc9610fc483610f7f565b610f4e565b82815260059290921b84018101918181019086841115610fe857600080fd5b8286015b8481101561100c578035610fff81610eff565b8352918301918301610fec565b509695505050505050565b600082601f83011261102857600080fd5b81356020611038610fc483610f7f565b82815260059290921b8401810191818101908684111561105757600080fd5b8286015b8481101561100c578035835291830191830161105b565b600067ffffffffffffffff82111561108c5761108c610f38565b50601f01601f191660200190565b600082601f8301126110ab57600080fd5b81356110b9610fc482611072565b8181528460208386010111156110ce57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561110057600080fd5b833567ffffffffffffffff8082111561111857600080fd5b61112487838801610fa3565b9450602086013591508082111561113a57600080fd5b61114687838801611017565b9350604086013591508082111561115c57600080fd5b506111698682870161109a565b9150509250925092565b6000806000806080858703121561118957600080fd5b843567ffffffffffffffff808211156111a157600080fd5b6111ad88838901610fa3565b955060208701359150808211156111c357600080fd5b6111cf88838901611017565b945060408701359150808211156111e557600080fd5b6111f188838901611017565b9350606087013591508082111561120757600080fd5b506112148782880161109a565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161125e5761125e611236565b5060010190565b60006020828403121561127757600080fd5b5051919050565b60006020828403121561129057600080fd5b81518015158114610f3157600080fd5b60005b838110156112bb5781810151838201526020016112a3565b50506000910152565b600081518084526112dc8160208601602086016112a0565b601f01601f19169290920160200192915050565b6001600160a01b0385811682526080602080840182905286519184018290526000928782019290919060a0860190855b8181101561133e578551851683529483019491830191600101611320565b5050858103604087015287518082529082019350915080870160005b838110156113765781518552938201939082019060010161135a565b50505050828103606084015261138c81856112c4565b979650505050505050565b600082601f8301126113a857600080fd5b81516113b6610fc482611072565b8181528460208386010111156113cb57600080fd5b6113dc8260208301602087016112a0565b949350505050565b600080600080608085870312156113fa57600080fd5b845161140581610eff565b602086015190945067ffffffffffffffff8082111561142357600080fd5b61142f88838901611397565b94506040870151915061144182610eff565b60608701519193508082111561145657600080fd5b5061121487828801611397565b600082516114758184602087016112a0565b9190910192915050565b808202811582820484141761149657611496611236565b92915050565b6000826114b957634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561149657611496611236565b818103818111156114965761149661123656fea264697066735822122021d1a4c537573ca62e53efa460a9e13b3ffd913b2de42dcbceb384c719ec52c364736f6c63430008140033";

type BalancerFlashLoanArbConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalancerFlashLoanArbConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BalancerFlashLoanArb__factory extends ContractFactory {
  constructor(...args: BalancerFlashLoanArbConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _vault: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_vault, overrides || {});
  }
  override deploy(
    _vault: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_vault, overrides || {}) as Promise<
      BalancerFlashLoanArb & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): BalancerFlashLoanArb__factory {
    return super.connect(runner) as BalancerFlashLoanArb__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerFlashLoanArbInterface {
    return new Interface(_abi) as BalancerFlashLoanArbInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BalancerFlashLoanArb {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BalancerFlashLoanArb;
  }
}
